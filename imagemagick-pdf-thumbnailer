#!/bin/bash

VERSION='1.0.1'

function print_help {
	echo "imagemagick-pdf-thumbnailer $VERSION"
	echo 'A thumbnailer for PDF files.'
	echo ''
	echo 'Usage: imagemagick-pdf-thumbnailer -i /path/to/input.pdf -o /path/to/output.png -s 128'
	echo '  -h: Print this help and exit.'
	echo '  -i: Path to input file with ".pdf" extension.'
	echo '  -o: Path to output file, which will be a PNG file.'
	echo '  -s: Optional maximum pixel size for the longest side.'
	echo '      Aspect ratio will be kept.'
	echo '  -v: Print the version of this script and exit.'
}

while getopts ':hi:o:s:v' opt; do
  case $opt in
	h)
		print_help
		exit
		;;
	i)
		FILE_IN="$OPTARG"
		;;
	o)
		FILE_OUT="$OPTARG"
		;;
	s)
		SIZE_LIMIT="$OPTARG"
		;;
	v)
		echo "$VERSION"
		exit
		;;
  esac
done

# Check if an input file is given.
if [ -z "$FILE_IN" ]; then
	echo 'ERROR: Missing value for parameter -i' >&2
	exit 1
fi

# Check if input file exists and is a file.
if [ ! -f "$FILE_IN" ]; then
	echo "ERROR: Input file either does not exist or is not a file: $FILE_IN" >&2
	exit 1
fi

# Check if an output file is given.
if [ -z "$FILE_OUT" ]; then
	echo 'ERROR: Missing value for paramter -o' >&2
	exit 1
fi

# Validate SIZE_LIMIT (-s) if set.
if [ -n "$SIZE_LIMIT" ]; then
	# Check if number.
	if ! [[ "$SIZE_LIMIT" =~ ^[0-9]+$ ]]; then
	   echo "ERROR: Value given to parameter -s has to be a number, but was: $SIZE_LIMIT" >&2
	   exit 1
	fi

	# Check if greater 0.
	if [ "$SIZE_LIMIT" -lt 1 ]; then
		echo "ERROR: Value for parameter -s has to be greater than 0, but was: $SIZE_LIMIT" >&2
		exit 1
	fi
fi

# Check file extension.
EXTENSION="${FILE_IN##*.}"

if [ "$EXTENSION" != 'pdf' ]; then
	exit
fi


# Create the thumbnail.
/usr/bin/convert-im6.q16 -thumbnail "${SIZE_LIMIT}x${SIZE_LIMIT}" "$FILE_IN"[0] -flatten "$FILE_OUT"
